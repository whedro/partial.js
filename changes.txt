======= 1.2.3-1

- updated: nosql (new version, supports changes)

- fixed: routing to static files
- fixed: routing to controllers
- fixed: stop framework when "EADDRINUSE"
- fixed: JavaScript compressor (problem with "\n" in views)

======= 1.2.3-0

- added: controller.stream(contentType, stream, [downloadName], [headers]);
- added: controller.validate() - controller.validation() is alias

- updated: utils.async, controller.async
- updated: nosql (new version)
- updated: content types

- renamed: utils.validation() to utils.validate()
- renamed: JavaScript content type renamed to text/javascript (from application/x-javascript)

- fixed: template engine
- fixed: view engine
- fixed: routing priority

======= 1.2.2-9

- fixed: problem with nosql/view–>create

======= 1.2.2-8

- updated: rename framework.onAuthorize to framework.onAuthorization

======= 1.2.2-7

- added: utils.expression() / global.expression(), read documentation -> utils / expression
- added: @{global.property} and @{!global.property}, read documentation -> framework
- added: controller.global == framework.global
- added: framework.global = {} - this is global object
- added: framework.pathTemp(name), framework.pathPublic(name)
- added: framework.ifNotModified(req, res, value, [strict]) and framework.setModified(req, res, value)
- added: framework.responseStream(req, res, filename, stream, [downloadName], [headers])

- updated: controller.view403(), controller.view403() and controller.view500()
- updated: nosql (supports binary files)

- fixed: view condition @{if condition} @{endif}
- fixed: framework.onLoaded throwing error

======= 1.2.2-6

- added: supports Accept-Ranges for streaming
- added: new config item: static-accepts-custom: .mp3, .flv, etc.

- updated: framework.usage(), added: databases directory size and added: staticsRange
- updated: clean code

======= 1.2.2-5

- updated: nosql embedded database (new version)
- updated: clean code
- updated: backup

- fixed: try -> catch to emit load event and #.onLoaded

======= 1.2.2-4

- updated: @{meta} / added after title " - " + config['name'] (without homepage url)
- updated: binary –> default controller name: default.js
- updated: empty project –> default controller name: default.js
- updated: nosql embedded database (new version)

======= 1.2.2-3

- updated: nosql embedded database

======= 1.2.2-2

- added: nosql embedded database (via https://github.com/petersirka/nosql)
- added: new namespace partial.js/nosql

- updated: backup & restore (added clear directory)
- updated: markdown image parser, added new parser tag: [![alt](src)](url)
- updated: framework.database()

- removed: sqlite3
- removed: QueryBuilder
- removed: ParameterBuilder
- rmeoved: OrderBuilder

- fixed: problem with older node.js version (setImmediate)
- fixed: problem with controller validation onResource

======= 1.2.2-1
======= 1.2.2-0
======= 1.2.1-9
======= 1.2.1-8

- added: keepalive.js (supports commands: reset, restart, stop, backup and restore)
- added: process.send() for child_process.fork();
- added: framework.cache.clear();
- added: to markdown: image with link ![alt](src)(url)

- fixed: problem in Windows with path to file or directory

======= 1.2.1-7

- added: framework.onFilterBackup(@path)
- added: framework.onFilterRestore(@path)

======= 1.2.1-6

- added: config['directory-backup']
- added: backup & restore website

- updated: controlller.validation() - now, owner is controller
- updated: assertion-testing added new "init" alias "run"
- updated: framework.usage(), added: backup directory size
- updated: decrease time expiration for views, contents, templates (5 minutes)
- updated: empty-project (added backup & restore command)
- updated: binary (executable)

======= 1.2.1-5

- IMPORTANT: removed @{viewIf},  @{templateIf},  @{contentIf}
- IMPORTANT: renamed @{viewVisible to viewToggle}, @{templateVisible to templateToggle}, @{contentVisible to contentToggle}
- IMPORTANT: renamed config keys

- added: config.version (web site version)
- added: controller.usage function
- added: framework.run() / alias for framework.init();
- added: new parameter @controller {Controller} to controller.onRequest()
- added: utils.trim();

- updated: decrease time expiration for static cache (5 minutes)
- updated: framework.usage()
- updated: binary / executables

- removed: config.httpCache
- removed: config.httpMinify
- removed: config.httpCompress
- removed: detailed parameter from module.usage() function

======= 1.2.1-4

- IMPORTANT: partial.js/picture renamed to partial.js/image

- added: @{css('default.css')}
- added: @{script('default.js')}
- added: @{image('image.jpg', @width {Number}, @height {Number}, @alt {String}, className {String})}
- added: @{favicon('favicon.png')}
- added: @{json(@obj {Object}, @name {String | Optional})}
- added: Number.padLeft(), Number.padRight()  - default char is '0'
- added: @{text()}, @{hidden()}, @{checkbox()}, @{radio()}, @{textarea()}, @{password()}
- added: builders.prepare('schemaName', model); return new object by the schema
- added: markdown - new paragraph // and \\

- updated: htmlEncode, htmlDecode (& = &amp;)
- updated: improvement View engine parser
- updated: @routeJS
- updated: @routeCSS
- updated: @routeImage
- updated: partial.js binary
- updated: String.padLeft(), String.padRight() - default char is ' '
- updated: utils.etag(filename, version)
- updated: utils.async & controller.async (setImmediate)

- renamed: utils.Etag and ETagVersion to: utils.etag() and config.etagVersion

- fixed: static files
- fixed: minify HTML
- fixed: @{if condition} @{endif}
- fixed: problem with empty view
- fixed: etagversion
- fixed: template engine parser (problem with date format)

======= 1.2.1-3

- added: builders.default(schemaName)
- added: utils.noop()
- added: string.count('search text')
- added: string.parseDate()
- added: string.urlEncode()
- added: string.urlDecode()

- updated: clean code
- updated: decrease time expiration in views and templates

- fixed: LESS @import
- fixed: string.htmlEncode(), utils.htmlEncode()

======= 1.2.1-2

- fixed: file upload

======= 1.2.1-1

- added: condition to view engine @{if model.a === model.b} TRUE @{else} FALSE @{endif} (doesnt support nested condition)

======= 1.2.1-0

- added: node v0.10.0 compatibility
- added: framework - process SIGINT event

- fixed: markdown parse link and image
- fixed: template repository
- fixed: utils.request (node v0.10)

======= 1.2.0-9

- updated: framework.cache, added cache.removeAll(search)
- updated: SQLite schemaCreate, schemaDrop, renamed to: createSchema, deleteSchema
- updated: markdown delegates + added new function markdown.parse() (it is same as markdown.load())

- fixed: utils.extend()
- fixed: install module
- fixed: req.hostname(), problem with uri.port

======= 1.2.0-8

- added: sqlite ORM supports blob type
- added: framework.on('exit')
- added: markdown.load(text, name), @name parameter (such as helper to parser)

- updated: rename returnFile, returnContent, returnStatic, return404, return500: responseFile, responseContent, etc..
- updated: auto added first property name as primary key in builders schema (note: if not defined primary key)
- updated: clean code
- updated: SQLite ORM: delete callback return params: @err {Error} and @isDeleted {Boolean}
- updated: Markdown link parser
- updated: rename view helpers (isReadonly, isDisabled, isChecked, isSelected: renamed to readonly, disabled, checked, selected)
- updated: improvement Markdown parser

- fixed: error message / view not found, content not found, template not found
- fixed: error message in SQLite ORM
- fixed: problem with insert, update in SQLite ORM (fix without properties)
- fixed: framework.clear()
- fixed: problem with upload and readSync & read (framework waits until the stream is closed)
- fixed: install controller & module - framework load only *.js files

======= 1.2.0-7

- added: framework.utils array.prototype.take(count), array.prototype.skip(count)
- added: sqlite.schemaCreate(schema), sqlite.schemaDrop(schema)
- added: controller.cancel()
- added: controller.install

- updated: controller.init is now obsolete
- updated: framework.createResource(name, {String or Object});

- fixed: framework.decode()
- fixed: problem with routing priority

======= 1.2.0-6

- updated: rename framework.statics to framework.static;
- clean code

======= 1.2.0-5

- fixed: problem with template compiler

======= 1.2.0-4

- updated: view compiler (improvement)
- updated: template compiler (improvement)

- fixed: problem with framework.clear();

======= 1.2.0-3

- added: controller.url :: {String}, property return relative url
- added: automatic minify HTML
- added: CSS minification is enabled in debug mode
- added: auto trimming string values to SQLite ORM - insert/update
- added: module usage

- updated: QueryBuilder (builders), add == addQuery
- updated: config, added @httpMinify {Boolean}, optional - default true

- fixed: framework.clear() (added clear framework.static)
- fixed: framework.usage() (fixed temporary directory size)

======= 1.2.0-2

- added: auto-initialization controllers
- added: SQLite simple ORM - partial.js/sqlite
- added: framework.database();
- added: controller.database();
- added: controller.sitemap();
- added: framework.onValidation();
- added: controller.validation();
- added: utils Async class
- added: new examples

- updated: documentations

- removed: partial.js/couchdb (https://github.com/petersirka/node-couchdb)
- removed: partial.js/mongodb (https://github.com/petersirka/node-mongolab)
- removed: partial.js/rdmbs (https://github.com/petersirka/node-rdbms)

- fixed: problems